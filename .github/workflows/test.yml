name: Tests

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'doc/**'
      - '.*'
      - '**.md'
      - '*.nix'
      - '*.yml'
      - '*.json'
      - 'LICENSE'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'doc/**'
      - '.*'
      - '**.md'
      - '*.nix'
      - '*.yml'
      - '*.json'
      - 'LICENSE'

env:
  CARGO_TERM_COLOR: always
  RUST_LOG_STYLE: always

jobs:
  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: sudo apt-get install -y cmake

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Rust cache
        uses: Swatinem/rust-cache@v2.0.0

      - name: Cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --all-targets --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Coverflow-checks=off'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'

      - id: coverage
        name: Generate coverage
        uses: actions-rs/grcov@v0.1.6

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ${{ steps.coverage.outputs.report }}
          directory: ./coverage/reports/

  functional-test:
    name: Functional tests
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        test: [
          bitcoin_syncer,
          monero_syncer,
          swap_alice_maker,
          swap_bob_funds_incorrect_amount,
          swap_bob_maker_kill_peerd,
          swap_bob_maker_manual_monero_sweep,
          swap_bob_maker_normal,
          swap_bob_maker_punish_kill_bob,
          swap_bob_maker_refund,
          swap_bob_maker_restore_checkpoint,
          swap_bob_maker_user_abort_sweep_btc,
          swap_parallel_execution,
          swap_revoke_offer_bob_maker_normal,
          cli,
          grpc,
        ]
    runs-on: ubuntu-latest
    env:
      RUST_LOG: 'info,farcaster_node=debug,microservices=debug'
      RUST_BACKTRACE: 1
    container:
      image: rust:slim-bullseye
      volumes:
        - bitcoind-data:/data

    services:
      bitcoind:
        image: ghcr.io/farcaster-project/containers/bitcoin-core:23.0
        env:
          NETWORK: regtest
        volumes:
          - bitcoind-data:/data
      electrs:
        image: ghcr.io/farcaster-project/containers/electrs:0.9.7
        env:
          NETWORK: regtest
          DAEMON_RPC_ADDR: bitcoind:18443
          DAEMON_P2P_ADDR: bitcoind:18444
          ELECTRUM_RPC_PORT: 60401
        volumes:
          - bitcoind-data:/data
      monerod:
        image: ghcr.io/farcaster-project/containers/monerod:0.18.0.0
        env:
          NETWORK: regtest
          OFFLINE: --offline
          DIFFICULTY: 1
      monero-wallet-rpc-1:
        image: ghcr.io/farcaster-project/containers/monero-wallet-rpc:0.18.0.0
        env:
          MONERO_DAEMON_ADDRESS: monerod:18081
          WALLET_RPC_PORT: 18083
      monero-wallet-rpc-2:
        image: ghcr.io/farcaster-project/containers/monero-wallet-rpc:0.18.0.0
        env:
          MONERO_DAEMON_ADDRESS: monerod:18081
          WALLET_RPC_PORT: 18083
      monero-wallet-rpc-3:
        image: ghcr.io/farcaster-project/containers/monero-wallet-rpc:0.18.0.0
        env:
          MONERO_DAEMON_ADDRESS: monerod:18081
          WALLET_RPC_PORT: 18083
      monero-lws:
        image: ghcr.io/farcaster-project/containers/monero-lws:monerod-0.17.3.2
        env:
          NETWORK: main
          MONERO_DAEMON_ADDRESS: monerod:18082

    steps:
      - uses: actions/checkout@v3

      - name: Refresh cache and add apt-utils
        run: apt-get update -y && apt-get install -y --no-install-recommends apt-utils
      - name: Install dependencies
        run: DEBIAN_FRONTEND=noninteractive apt-get install -y libssl-dev pkg-config build-essential cmake

      - name: Rust cache
        uses: Swatinem/rust-cache@v2.0.0
        with:
          key: ${{ matrix.test }}

      - name: Cargo functional test
        run: cargo test ${{ matrix.test }} --workspace --all-targets --all-features --color always -- --ignored --test-threads=1
